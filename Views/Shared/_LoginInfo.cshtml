@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle text-dark font-weight-bold" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Witaj @UserManager.GetUserName(User)!
    </a>
    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="btn btn-block">Wyloguj się</button>
        </form>
        <form id="changePasswordForm" class="form-inline" asp-area="Identity" asp-page="/Account/ChangePassword" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="changePassword" type="submit" class="btn btn-block">Zmień hasło</button>
        </form>
    </div>
</li>
}
else
{
    <li class="nav-item">
        <a class="btn btn-success" id="register" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>    
        <a class="btn btn-info" id="login" asp-area="Identity" asp-page="/Account/Login">Zaloguj się</a>
    </li>
}

